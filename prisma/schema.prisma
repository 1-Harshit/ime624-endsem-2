generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pin {
  zipcode  String       @id
  district String    @db.VarChar(200)
  state    String    @db.VarChar(200)
  Address  Address[]
}

model Address {
  id         String      @id @default(cuid())
  line1      String
  line2      String
  pinZipcode String
  aadhar     Aadhar[]
  Pin        Pin         @relation(fields: [pinZipcode], references: [zipcode])
  Applicant  Applicant[]
}

model LoanApplication {
  acNumber     String    @id @default(cuid())
  applicantId  String
  principalAmt Int
  duration     Int
  purpose      String?
  applicant    Applicant @relation(fields: [applicantId], references: [phoneNumber])
}

model Asset {
  assetId         String    @id @default(cuid())
  ownerId         String
  assetType       Type
  assetQuantifier Int
  description     String?
  valuation       Int
  proof           String?
  verified        Boolean   @default(false)
  owner           Applicant @relation(fields: [ownerId], references: [phoneNumber])
}

model Aadhar {
  aadharNumber String    @id @db.VarChar(255)
  ownerId      String    @unique
  name         String    @db.VarChar(255)
  dob          DateTime
  sex          Gender
  addressId    String
  permAddress  Address   @relation(fields: [addressId], references: [id])
  owner        Applicant @relation(fields: [ownerId], references: [phoneNumber])
}

model Applicant {
  phoneNumber   String            @id @db.VarChar(20)
  income        Int
  pan           String?           @db.VarChar(20)
  addressId     String
  maritalStatus Status
  aadhar        Aadhar?
  currAddress   Address           @relation(fields: [addressId], references: [id])
  assets        Asset[]
  applications  LoanApplication[]
}

enum Type {
  LAND
  VEHICLE
  ANIMAL
}

enum Gender {
  MALE
  FEMALE
}

enum Status {
  SINGLE
  MARRIED
  DIVORCED
  SEPARATED
}
